// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package distbench;

import "joint_distribution.proto";

// Specifies how many servers there are of each type.
// The name of an individual instance is just $name/$intance_number,
// e.g. "search_leaf/0"
message ServiceSpec {
  optional string name = 1;
  optional int32 count = 2;
  optional string protocol_driver_options_name = 3;
}

// Specifies how multiple services may be co-located on the same machine.
// By default each service is allocated a separate machine, if not mentioned.
message ServiceBundle {
  repeated string services = 1;
}

// Defines how to construct a pool of protobufs to be used as requests or
// responses.
message PayloadSpec {
  optional string name = 1;
  optional int32 size = 4;
}

message RpcSpec {
  optional string name = 1;
  optional string client = 2;
  optional string server = 3;
  optional string request_payload_name = 4;
  optional string response_payload_name = 5;
  optional string fanout_filter = 6 [default = "all"];
  optional int32 tracing_interval = 7;
  optional string distribution_config_name = 8;
}

message Iterations {
  optional int32 max_iteration_count = 1;
  optional int32 max_duration_us = 2;
  optional int64 max_parallel_iterations = 3 [default = 1];
  optional int64 open_loop_interval_ns = 4;
  optional string open_loop_interval_distribution = 5 [default = "constant"];
  // Marks RPCs triggered by the first N iterations as warmup RPCs,
  // which can be discarded by downstream analysis tools.
  optional int64 warmup_iterations = 6 [default = 0];
}

message ActivityConfig {
  optional string name = 1;
  repeated NamedSetting activity_settings = 2;
}

message Action {
  optional string name = 1;
  repeated string dependencies = 2;
  optional Iterations iterations = 3;
  oneof action {
    string rpc_name = 4;
    string action_list_name = 5;
    string activity_config_name = 6;
  }
  optional bool send_response_when_done = 10;
  optional bool cancel_traffic_when_done = 11 [default = false];
}

message ActionList {
  optional string name = 1;
  repeated string action_names = 2;
  // If more than max_rpc_samples rpcs are performed then distbench will
  // choose the samples to retain via reservoir sampling.
  // Setting this to zero will retain all samples, but may hurt performance.
  optional int64 max_rpc_samples = 3 [default = 0];
}

message NamedSetting {
  optional string name = 1;
  optional string string_value = 2;
  optional int64  int64_value = 3;
}

message ProtocolDriverOptions {
  optional string name = 1;
  optional string protocol_name = 2;
  optional string netdev_name = 3;
  repeated NamedSetting server_settings = 4;
  repeated NamedSetting client_settings = 5;
  optional int32 ip_version = 6 [default = 0];
}

message OverloadLimits {
  optional int64 max_threads = 1 [default = 1000];
  optional int64 max_pending_rpcs = 2 [default = 1000000];
}

message DistributedSystemDescription {
  optional string name = 9;
  map<string, string> attributes = 10;
  repeated ServiceSpec services = 1;
  map<string, ServiceBundle> node_service_bundles = 2;

  // In order to provide the users with an easy way of creating
  // text_protos, 'repeated' fields are used instead of 'maps'.
  repeated PayloadSpec payload_descriptions = 3;
  repeated RpcSpec rpc_descriptions = 4;
  repeated ActivityConfig activity_configs = 11;
  repeated Action actions = 5;
  repeated ActionList action_lists = 6;

  optional string default_protocol = 7 [default = "grpc"];
  repeated ProtocolDriverOptions protocol_driver_options = 8;
  repeated DistributionConfig distribution_config = 12;

  optional OverloadLimits overload_limits = 13;
}
