# produced by ./../test_builder -o . multi_level_rpc:qps=20000 
tests {
  attributes: { key: 'config_label' value: 'multi_level_rpc:qps=20000' }
  attributes: { key: 'leaf_count' value: '20' }
  attributes: { key: 'protocol_alias' value: 'grpc' }
  attributes: { key: 'protocol_driver' value: 'grpc' }
  attributes: { key: 'qps' value: '20000' }
  attributes: { key: 'root_count' value: '4' }
  attributes: { key: 'test_duration' value: '30' }
  attributes: { key: 'test_name' value: 'multi_level_rpc_4x20x20000-grpc' }
  attributes: { key: 'test_timeout' value: '90' }
  attributes: { key: 'traffic_alias' value: 'multi_level_rpc_4x20x20000' }
  attributes: { key: 'traffic_pattern' value: 'multi_level_rpc' }
  default_protocol: 'grpc'
  protocol_driver_options {
    name: 'common_options'
  }
  name: 'multi_level_rpc_4x20x20000-grpc'
  services {
    name: 'load_balancer'
    count: 1
    protocol_driver_options_name: 'common_options'
  }
  services {
    name: 'root'
    count: 4
    protocol_driver_options_name: 'common_options'
  }
  services {
    name: 'leaf'
    count: 20
    protocol_driver_options_name: 'common_options'
  }
  action_lists {
    name: 'load_balancer'
    action_names: 'establish_connections'
    action_names: 'do_closed_loop_root_queries'
    max_rpc_samples: 10000000
  }
  actions {
    name: 'establish_connections'
    iterations {
      max_iteration_count: 4
    }
    rpc_name: 'root_query'
  }
  actions {
    name: 'do_closed_loop_root_queries'
    iterations {
      max_duration_us: 30000000
      open_loop_interval_ns: 50000
    }
    rpc_name: 'root_query'
    dependencies: 'establish_connections'
  }
  rpc_descriptions {
    name: 'root_query'
    client: 'load_balancer'
    server: 'root'
    fanout_filter: 'round_robin'
    request_payload_name: 'root_request_payload'
    response_payload_name: 'root_response_payload'
  }
  action_lists {
    name: 'root_query'
    action_names: 'root_query_fanout'
    max_rpc_samples: 256
  }
  actions {
    name: 'root_query_fanout'
    rpc_name: 'leaf_query'
  }
  rpc_descriptions {
    name: 'leaf_query'
    client: 'root'
    server: 'leaf'
    fanout_filter: 'all'
    request_payload_name: 'leaf_request_payload'
    response_payload_name: 'leaf_response_payload'
  }
  action_lists {
    name: 'leaf_query'
    # no actions, NOP
  }
  payload_descriptions {
    name: 'root_request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'root_response_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'leaf_request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'leaf_response_payload'
    size: 1024
  }
}
