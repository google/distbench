# produced by test_builder -o . variable_response_multi_level_rpc:upper_size=65000
tests {
  attributes: { key: 'client_type' value: 'polling' }
  attributes: { key: 'config_label' value: 'variable_response_multi_level_rpc:upper_size=65000' }
  attributes: { key: 'leaf_count' value: '20' }
  attributes: { key: 'lower_size' value: '1024' }
  attributes: { key: 'protocol_alias' value: 'grpc_polling_inline' }
  attributes: { key: 'protocol_driver' value: 'grpc' }
  attributes: { key: 'qps' value: '10000' }
  attributes: { key: 'root_count' value: '4' }
  attributes: { key: 'server_type' value: 'inline' }
  attributes: { key: 'test_duration' value: '30' }
  attributes: { key: 'test_name' value: 'variable_response_multi_level_rpc_4x20x10000-grpc_polling_inline-1024-65000' }
  attributes: { key: 'test_timeout' value: '150' }
  attributes: { key: 'threadpool_size' value: '0' }
  attributes: { key: 'traffic_alias' value: 'variable_response_multi_level_rpc_4x20x10000' }
  attributes: { key: 'traffic_pattern' value: 'variable_response_multi_level_rpc' }
  attributes: { key: 'upper_size' value: '65000' }
  protocol_driver_options {
    name: 'default_protocol_driver_options'
    protocol_name: 'grpc'
    server_settings {
      name: 'server_type'
      string_value: 'inline'
    }
    client_settings {
      name: 'client_type'
      string_value: 'polling'
    }
  }
  name: 'variable_response_multi_level_rpc_4x20x10000-grpc_polling_inline-1024-65000'
  services {
    name: 'load_balancer'
    count: 1
  }
  services {
    name: 'root'
    count: 4
  }
  services {
    name: 'leaf'
    count: 20
  }
  action_lists {
    name: 'load_balancer'
    action_names: 'do_closed_loop_root_queries'
    max_rpc_samples: 10000000
  }
  actions {
    name: 'do_closed_loop_root_queries'
    iterations {
      max_duration_us: 30000000
      open_loop_interval_ns: 100000
      open_loop_interval_distribution: 'exponential_distribution'
      warmup_iterations: 30000
    }
    rpc_name: 'root_query'
  }
  rpc_descriptions {
    name: 'root_query'
    client: 'load_balancer'
    server: 'root'
    fanout_filter: 'round_robin'
    request_payload_name: 'root_request_payload'
    response_payload_name: 'root_response_payload'
  }
  action_lists {
    name: 'root_query'
    action_names: 'root_query_fanout'
    max_rpc_samples: 256
  }
  actions {
    name: 'root_query_fanout'
    rpc_name: 'leaf_query'
  }
  rpc_descriptions {
    name: 'leaf_query'
    client: 'root'
    server: 'leaf'
    fanout_filter: 'all'
    distribution_config_name: 'leaf_payload'
  }
  action_lists {
    name: 'leaf_query'
    # no actions, NOP
  }
  payload_descriptions {
    name: 'root_request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'root_response_payload'
    size: 1024
  }
  overload_limits {
    max_threads: 10000
  }
  distribution_config{
    name: 'leaf_payload'
    field_names: 'request_payload_size'
    field_names: 'response_payload_size'
    pmf_points{ pmf: 1.0 data_points{ exact: 1024} data_points{ lower: 1024 upper: 65000 }}
  }
}
