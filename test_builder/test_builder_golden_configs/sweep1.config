# produced by ./../test_builder -o - parameter_sweep rpc_interval_us 4000 1000 8000 clique 
tests {
  attributes: { key: 'config_label' value: 'clique' }
  attributes: { key: 'node_count' value: '10' }
  attributes: { key: 'protocol_alias' value: 'grpc' }
  attributes: { key: 'protocol_driver' value: 'grpc' }
  attributes: { key: 'rpc_interval_us' value: '4000' }
  attributes: { key: 'swept_parameter' value: 'rpc_interval_us' }
  attributes: { key: 'synchronization_mode' value: 'sync_burst' }
  attributes: { key: 'test_duration' value: '30' }
  attributes: { key: 'test_name' value: 'clique_sync_burst_10x4000-grpc' }
  attributes: { key: 'test_timeout' value: '90' }
  attributes: { key: 'traffic_alias' value: 'clique_sync_burst_10x4000' }
  attributes: { key: 'traffic_pattern' value: 'clique' }
  default_protocol: 'grpc'
  protocol_driver_options {
    name: 'common_options'
  }
  name: 'clique_sync_burst_10x4000-grpc'
  services {
    name: 'clique'
    count: 10
    protocol_driver_options_name: 'common_options'
  }
  action_lists {
    name: 'clique'
    action_names: 'clique_queries'
  }
  actions {
    name: 'clique_queries'
    iterations {
      max_duration_us: 30000000
      open_loop_interval_ns: 4000000
      open_loop_interval_distribution: 'sync_burst'
    }
    rpc_name: 'clique_query'
  }
  payload_descriptions {
    name: 'request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'response_payload'
    size: 1024
  }
  rpc_descriptions {
    name: 'clique_query'
    client: 'clique'
    server: 'clique'
    fanout_filter: 'all'
    request_payload_name: 'request_payload'
    response_payload_name: 'response_payload'
  }
  action_lists {
    name: 'clique_query'
    # no actions, NOP
  }
}
tests {
  attributes: { key: 'config_label' value: 'clique' }
  attributes: { key: 'node_count' value: '10' }
  attributes: { key: 'protocol_alias' value: 'grpc' }
  attributes: { key: 'protocol_driver' value: 'grpc' }
  attributes: { key: 'rpc_interval_us' value: '5000' }
  attributes: { key: 'swept_parameter' value: 'rpc_interval_us' }
  attributes: { key: 'synchronization_mode' value: 'sync_burst' }
  attributes: { key: 'test_duration' value: '30' }
  attributes: { key: 'test_name' value: 'clique_sync_burst_10x5000-grpc' }
  attributes: { key: 'test_timeout' value: '90' }
  attributes: { key: 'traffic_alias' value: 'clique_sync_burst_10x5000' }
  attributes: { key: 'traffic_pattern' value: 'clique' }
  default_protocol: 'grpc'
  protocol_driver_options {
    name: 'common_options'
  }
  name: 'clique_sync_burst_10x5000-grpc'
  services {
    name: 'clique'
    count: 10
    protocol_driver_options_name: 'common_options'
  }
  action_lists {
    name: 'clique'
    action_names: 'clique_queries'
  }
  actions {
    name: 'clique_queries'
    iterations {
      max_duration_us: 30000000
      open_loop_interval_ns: 5000000
      open_loop_interval_distribution: 'sync_burst'
    }
    rpc_name: 'clique_query'
  }
  payload_descriptions {
    name: 'request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'response_payload'
    size: 1024
  }
  rpc_descriptions {
    name: 'clique_query'
    client: 'clique'
    server: 'clique'
    fanout_filter: 'all'
    request_payload_name: 'request_payload'
    response_payload_name: 'response_payload'
  }
  action_lists {
    name: 'clique_query'
    # no actions, NOP
  }
}
tests {
  attributes: { key: 'config_label' value: 'clique' }
  attributes: { key: 'node_count' value: '10' }
  attributes: { key: 'protocol_alias' value: 'grpc' }
  attributes: { key: 'protocol_driver' value: 'grpc' }
  attributes: { key: 'rpc_interval_us' value: '6000' }
  attributes: { key: 'swept_parameter' value: 'rpc_interval_us' }
  attributes: { key: 'synchronization_mode' value: 'sync_burst' }
  attributes: { key: 'test_duration' value: '30' }
  attributes: { key: 'test_name' value: 'clique_sync_burst_10x6000-grpc' }
  attributes: { key: 'test_timeout' value: '90' }
  attributes: { key: 'traffic_alias' value: 'clique_sync_burst_10x6000' }
  attributes: { key: 'traffic_pattern' value: 'clique' }
  default_protocol: 'grpc'
  protocol_driver_options {
    name: 'common_options'
  }
  name: 'clique_sync_burst_10x6000-grpc'
  services {
    name: 'clique'
    count: 10
    protocol_driver_options_name: 'common_options'
  }
  action_lists {
    name: 'clique'
    action_names: 'clique_queries'
  }
  actions {
    name: 'clique_queries'
    iterations {
      max_duration_us: 30000000
      open_loop_interval_ns: 6000000
      open_loop_interval_distribution: 'sync_burst'
    }
    rpc_name: 'clique_query'
  }
  payload_descriptions {
    name: 'request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'response_payload'
    size: 1024
  }
  rpc_descriptions {
    name: 'clique_query'
    client: 'clique'
    server: 'clique'
    fanout_filter: 'all'
    request_payload_name: 'request_payload'
    response_payload_name: 'response_payload'
  }
  action_lists {
    name: 'clique_query'
    # no actions, NOP
  }
}
tests {
  attributes: { key: 'config_label' value: 'clique' }
  attributes: { key: 'node_count' value: '10' }
  attributes: { key: 'protocol_alias' value: 'grpc' }
  attributes: { key: 'protocol_driver' value: 'grpc' }
  attributes: { key: 'rpc_interval_us' value: '7000' }
  attributes: { key: 'swept_parameter' value: 'rpc_interval_us' }
  attributes: { key: 'synchronization_mode' value: 'sync_burst' }
  attributes: { key: 'test_duration' value: '30' }
  attributes: { key: 'test_name' value: 'clique_sync_burst_10x7000-grpc' }
  attributes: { key: 'test_timeout' value: '90' }
  attributes: { key: 'traffic_alias' value: 'clique_sync_burst_10x7000' }
  attributes: { key: 'traffic_pattern' value: 'clique' }
  default_protocol: 'grpc'
  protocol_driver_options {
    name: 'common_options'
  }
  name: 'clique_sync_burst_10x7000-grpc'
  services {
    name: 'clique'
    count: 10
    protocol_driver_options_name: 'common_options'
  }
  action_lists {
    name: 'clique'
    action_names: 'clique_queries'
  }
  actions {
    name: 'clique_queries'
    iterations {
      max_duration_us: 30000000
      open_loop_interval_ns: 7000000
      open_loop_interval_distribution: 'sync_burst'
    }
    rpc_name: 'clique_query'
  }
  payload_descriptions {
    name: 'request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'response_payload'
    size: 1024
  }
  rpc_descriptions {
    name: 'clique_query'
    client: 'clique'
    server: 'clique'
    fanout_filter: 'all'
    request_payload_name: 'request_payload'
    response_payload_name: 'response_payload'
  }
  action_lists {
    name: 'clique_query'
    # no actions, NOP
  }
}
tests {
  attributes: { key: 'config_label' value: 'clique' }
  attributes: { key: 'node_count' value: '10' }
  attributes: { key: 'protocol_alias' value: 'grpc' }
  attributes: { key: 'protocol_driver' value: 'grpc' }
  attributes: { key: 'rpc_interval_us' value: '8000' }
  attributes: { key: 'swept_parameter' value: 'rpc_interval_us' }
  attributes: { key: 'synchronization_mode' value: 'sync_burst' }
  attributes: { key: 'test_duration' value: '30' }
  attributes: { key: 'test_name' value: 'clique_sync_burst_10x8000-grpc' }
  attributes: { key: 'test_timeout' value: '90' }
  attributes: { key: 'traffic_alias' value: 'clique_sync_burst_10x8000' }
  attributes: { key: 'traffic_pattern' value: 'clique' }
  default_protocol: 'grpc'
  protocol_driver_options {
    name: 'common_options'
  }
  name: 'clique_sync_burst_10x8000-grpc'
  services {
    name: 'clique'
    count: 10
    protocol_driver_options_name: 'common_options'
  }
  action_lists {
    name: 'clique'
    action_names: 'clique_queries'
  }
  actions {
    name: 'clique_queries'
    iterations {
      max_duration_us: 30000000
      open_loop_interval_ns: 8000000
      open_loop_interval_distribution: 'sync_burst'
    }
    rpc_name: 'clique_query'
  }
  payload_descriptions {
    name: 'request_payload'
    size: 1024
  }
  payload_descriptions {
    name: 'response_payload'
    size: 1024
  }
  rpc_descriptions {
    name: 'clique_query'
    client: 'clique'
    server: 'clique'
    fanout_filter: 'all'
    request_payload_name: 'request_payload'
    response_payload_name: 'response_payload'
  }
  action_lists {
    name: 'clique_query'
    # no actions, NOP
  }
}
