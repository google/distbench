##### Simple, optional repos in the local filesystem:
new_local_repository(
    name = "mercury",
    path = "external_repos/opt/mercury",
    build_file = "mercury.BUILD",
)

new_local_repository(
    name = "libfabric",
    path = "external_repos/opt/libfabric",
    build_file = "libfabric.BUILD",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

##### Http repositories that do not require invoking any imported functions:
http_archive(
  name = "com_google_benchmark",
  sha256 = "ef0fab8058be682e382e155eeda1b22e1747fd6606e22e0c1b19f6da91e8b52d",
  urls = ["https://github.com/google/benchmark/archive/69054ae50e07e9de7cb27f9e2d1d355f74605524.zip"],
  strip_prefix = "benchmark-69054ae50e07e9de7cb27f9e2d1d355f74605524",
)

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    strip_prefix = "gflags-2.2.2",
    urls = ["https://github.com/gflags/gflags/archive/v2.2.2.tar.gz"],
)

http_archive(
    name = "com_github_google_glog",
    sha256 = "122fb6b712808ef43fbf80f75c52a21c9760683dae470154f02bddfc61135022",
    strip_prefix = "glog-0.6.0",
    urls = ["https://github.com/google/glog/archive/v0.6.0.zip"],
)

http_archive(
    name = "grpc_homa",
    sha256 = "839f5c02a9a70b1a7422ec925b694f0a0126557208ee9240039f991f067455e3",
    urls = [
        "https://github.com/PlatformLab/grpc_homa/archive/168787ef6473717a8c58bbe8347da71f63b86106.tar.gz"
    ],
    build_file = "@//:grpc_homa.BUILD",
    strip_prefix = "grpc_homa-168787ef6473717a8c58bbe8347da71f63b86106",
)

http_archive(
    name = "homa_module",
    sha256 = "d9877e3bc4395e1556046f3730f47a8c5294ba573ce9404a977d24caf6571348",
    urls = [
        "https://github.com/PlatformLab/HomaModule/archive/a889ebc0d9c2a2437fc41323da01422e8314f6db.tar.gz"
    ],
    build_file = "@//:homa_module.BUILD",
    strip_prefix = "HomaModule-a889ebc0d9c2a2437fc41323da01422e8314f6db",
)

##### GRPC rules: This imports a lot of dependencies for us via
##### grpc_deps() and grpc_extra_deps().
http_archive(
    name = "com_github_grpc_grpc",
    urls = [
        "https://github.com/grpc/grpc/archive/c0d1c393d9365664d47df41746e992ae97b651ef.tar.gz", # Release 1.56.2
    ],
    strip_prefix = "grpc-c0d1c393d9365664d47df41746e992ae97b651ef",
)
load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
grpc_deps()
load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")
grpc_extra_deps()

##### Boost rules: Imports more deps via boost_deps()
http_archive(
    name = "com_github_nelhage_rules_boost",
    sha256 = "a023496468931c8d64abc4ba036f985f3977da03a7f7680282d7e6d9e42ff27d",
    url = "https://github.com/nelhage/rules_boost/archive/2cd6e7b540403fe737a10f90bc53de86a16a6eed.tar.gz",
    strip_prefix = "rules_boost-2cd6e7b540403fe737a10f90bc53de86a16a6eed",
)
load("@com_github_nelhage_rules_boost//:boost/boost.bzl", "boost_deps")
boost_deps()

##### This is used to perform a version check on our bazel dialect via the
##### versions.check() function. comes last to avoid needing explicit
##### dependencies that could become conflicts in the future.
http_archive(
    name = "bazel_skylib",
    sha256 = "07b4117379dde7ab382345c3b0f5edfc6b7cff6c93756eac63da121e0bbcc5de",
    strip_prefix = "bazel-skylib-1.1.1",
    urls = [
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.1.1/bazel-skylib-1.1.1.tar.gz",
    ],
)
load("@bazel_skylib//lib:versions.bzl", "versions")
versions.check(
    minimum_bazel_version = "4.2.1",
    maximum_bazel_version = "5.4.0",
)
